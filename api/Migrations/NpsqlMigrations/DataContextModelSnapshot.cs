// <auto-generated />
using System;
using DoppelkopfApi.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DoppelkopfApi.Migrations.NpsqlMigrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DoppelkopfApi.Entities.PlayTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdditionalWeddingPlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentPlayerPosition")
                        .HasColumnType("integer");

                    b.Property<bool>("DiamondsAceAsMaster")
                        .HasColumnType("boolean");

                    b.Property<int>("GameVariant")
                        .HasColumnType("integer");

                    b.Property<string>("LastCardSet")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RoundCardsGiversPosition")
                        .HasColumnType("integer");

                    b.Property<int>("RoundCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RunStarted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SilentForPlayer")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StitchCounter")
                        .HasColumnType("integer");

                    b.Property<string>("TableIcon")
                        .HasColumnType("text");

                    b.Property<bool>("WeddingWithFirstColorCast")
                        .HasColumnType("boolean");

                    b.Property<bool>("WithNiner")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("PlayTables");
                });

            modelBuilder.Entity("DoppelkopfApi.Entities.TablePlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AnnouncementReParty")
                        .HasColumnType("boolean");

                    b.Property<bool>("AnnouncementVersusParty")
                        .HasColumnType("boolean");

                    b.Property<int>("CancellationOfparty")
                        .HasColumnType("integer");

                    b.Property<int>("GameVariant")
                        .HasColumnType("integer");

                    b.Property<string>("HandCards")
                        .HasColumnType("text");

                    b.Property<bool>("HasDiamondClubsOnHand")
                        .HasColumnType("boolean");

                    b.Property<bool>("NextTurn")
                        .HasColumnType("boolean");

                    b.Property<string>("PlayedCard")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerPosition")
                        .HasColumnType("integer");

                    b.Property<bool>("RoundWinner")
                        .HasColumnType("boolean");

                    b.Property<int>("RoundsPoints")
                        .HasColumnType("integer");

                    b.Property<bool>("ShuffleRound")
                        .HasColumnType("boolean");

                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<int>("WinnedRounds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TablePlayer");
                });

            modelBuilder.Entity("DoppelkopfApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
